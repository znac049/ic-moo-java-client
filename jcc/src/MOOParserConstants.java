/* Generated By:JavaCC: Do not edit this line. MOOParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MOOParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 5;
  /** RegularExpression Id. */
  int ELSEIF = 6;
  /** RegularExpression Id. */
  int ELSE = 7;
  /** RegularExpression Id. */
  int ENDIF = 8;
  /** RegularExpression Id. */
  int FOR = 9;
  /** RegularExpression Id. */
  int IN = 10;
  /** RegularExpression Id. */
  int ENDFOR = 11;
  /** RegularExpression Id. */
  int TO = 12;
  /** RegularExpression Id. */
  int WHILE = 13;
  /** RegularExpression Id. */
  int ENDWHILE = 14;
  /** RegularExpression Id. */
  int FORK = 15;
  /** RegularExpression Id. */
  int ENDFORK = 16;
  /** RegularExpression Id. */
  int BREAK = 17;
  /** RegularExpression Id. */
  int CONTINUE = 18;
  /** RegularExpression Id. */
  int RETURN = 19;
  /** RegularExpression Id. */
  int PASS = 20;
  /** RegularExpression Id. */
  int TRY = 21;
  /** RegularExpression Id. */
  int ENDTRY = 22;
  /** RegularExpression Id. */
  int EXCEPT = 23;
  /** RegularExpression Id. */
  int FINALLY = 24;
  /** RegularExpression Id. */
  int ANY = 25;
  /** RegularExpression Id. */
  int MINUS = 26;
  /** RegularExpression Id. */
  int OPERATOR = 27;
  /** RegularExpression Id. */
  int LPAREN = 28;
  /** RegularExpression Id. */
  int RPAREN = 29;
  /** RegularExpression Id. */
  int LSQUARE = 30;
  /** RegularExpression Id. */
  int RSQUARE = 31;
  /** RegularExpression Id. */
  int LBRACE = 32;
  /** RegularExpression Id. */
  int RBRACE = 33;
  /** RegularExpression Id. */
  int COMMA = 34;
  /** RegularExpression Id. */
  int SEMICOLON = 35;
  /** RegularExpression Id. */
  int BECOMES = 36;
  /** RegularExpression Id. */
  int AT = 37;
  /** RegularExpression Id. */
  int QUERY = 38;
  /** RegularExpression Id. */
  int PIPE = 39;
  /** RegularExpression Id. */
  int COLON = 40;
  /** RegularExpression Id. */
  int ARROW = 41;
  /** RegularExpression Id. */
  int NUM_TYPE = 42;
  /** RegularExpression Id. */
  int OBJ_TYPE = 43;
  /** RegularExpression Id. */
  int LIST_TYPE = 44;
  /** RegularExpression Id. */
  int ERR_TYPE = 45;
  /** RegularExpression Id. */
  int STR_TYPE = 46;
  /** RegularExpression Id. */
  int E_TYPE = 47;
  /** RegularExpression Id. */
  int E_DIV = 48;
  /** RegularExpression Id. */
  int E_RANGE = 49;
  /** RegularExpression Id. */
  int E_INVARG = 50;
  /** RegularExpression Id. */
  int E_VERBNF = 51;
  /** RegularExpression Id. */
  int E_PROPNF = 52;
  /** RegularExpression Id. */
  int E_VARNF = 53;
  /** RegularExpression Id. */
  int E_PERM = 54;
  /** RegularExpression Id. */
  int E_INVALID = 55;
  /** RegularExpression Id. */
  int E_MAXREC = 56;
  /** RegularExpression Id. */
  int E_ALL = 57;
  /** RegularExpression Id. */
  int DIGIT = 58;
  /** RegularExpression Id. */
  int HEXDIGIT = 59;
  /** RegularExpression Id. */
  int INTEGER = 60;
  /** RegularExpression Id. */
  int FLOAT = 61;
  /** RegularExpression Id. */
  int OBJREF = 62;
  /** RegularExpression Id. */
  int LETTER = 63;
  /** RegularExpression Id. */
  int US = 64;
  /** RegularExpression Id. */
  int IDENT = 65;
  /** RegularExpression Id. */
  int STRING = 66;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"if\"",
    "\"elseif\"",
    "\"else\"",
    "\"endif\"",
    "\"for\"",
    "\"in\"",
    "\"endfor\"",
    "\"..\"",
    "\"while\"",
    "\"endwhile\"",
    "\"fork\"",
    "\"endfork\"",
    "\"break\"",
    "\"continue\"",
    "\"return\"",
    "\"pass\"",
    "\"try\"",
    "\"endtry\"",
    "\"except\"",
    "\"finally\"",
    "\"any\"",
    "\"-\"",
    "<OPERATOR>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "\"=\"",
    "\"@\"",
    "\"?\"",
    "\"|\"",
    "\":\"",
    "\"=>\"",
    "\"NUM\"",
    "\"OBJ\"",
    "\"LIST\"",
    "\"ERR\"",
    "\"STR\"",
    "\"E_TYPE\"",
    "\"E_DIV\"",
    "\"E_RANGE\"",
    "\"E_INVARG\"",
    "\"E_VERBNF\"",
    "\"E_PROPNF\"",
    "\"E_VARNF\"",
    "\"E_PERM\"",
    "\"E_INVIND\"",
    "\"E_MAXREC\"",
    "\"ALL\"",
    "<DIGIT>",
    "<HEXDIGIT>",
    "<INTEGER>",
    "<FLOAT>",
    "<OBJREF>",
    "<LETTER>",
    "\"_\"",
    "<IDENT>",
    "<STRING>",
    "\".\"",
    "\"!\"",
  };

}
